
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.24/dist/sweetalert2.all.min.js"></script>
    

    <style>
    @import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap');

        .breadcrumb {
            background-color: #f8f9fa;
            padding: 10px 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .breadcrumb a {
            text-decoration: none;
            color: #007bff;
        }

        .breadcrumb a:hover {
            text-decoration: underline;
        }

        #imageZoom {
            width: 100%;
            max-width: 550px;
            height: 600px;
            position: relative;
            margin: auto;
        }

        #imageZoom img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        #imageZoom::after {
            display: var(--display);
            content: '';
            width: 100%;
            height: 100%;
            background-color: black;
            background-image: var(--url);
            background-size: 200%; /* Adjust zoom level */
            background-position: var(--zoom-x) var(--zoom-y);
            position: absolute;
            left: 0;
            top: 0;
        }

     
    </style>
    <style>
        /* Main Container */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            font-family: 'Nunito', sans-serif;
        }

        /* Main Image Styling */
        .main-image-container {
            position: relative;
            overflow: hidden;
            border-radius: 10px;
            width: 100vw;
            height: 100vw;
            max-width: 440px;
            max-height: 440px;
            box-shadow: 0 4px 31px rgba(0, 0, 0, 0.13)
        }

        .main-image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Thumbnails Styling */
        .thumbnails-container {
            display: flex;
            flex-direction: row;
            justify-content: center;
            gap: 10px;
            margin-top: 10px;
        }

        .thumbnail img {
            cursor: pointer;
            border-radius: 12px;
            width: 100px;
            height: 80px;
            object-fit: cover;
            border: 2px solid transparent;
            transition: border 0.3s ease;
        }

        .thumbnail img:hover,
        .thumbnail img.active {
            border-color: #007bff;
        }

        /* Product Details */
        .product-details {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .product-title {
            font-weight: bold;
            font-size: 1.8rem;
            margin-bottom: 10px;
        }

        .product-category {
            color: #6c757d;
            font-size: 1rem;
            margin-bottom: 15px;
        }

        .product-price {
            color: #28a745;
            font-weight: bold;
            font-size: 1.5rem;
            margin-bottom: 15px;
        }

        .rating i {
            color: #ffc107;
        }

        .description {
            color: #555;
            font-size: 1rem;
            margin-bottom: 20px;
        }

        .action-buttons .btn {
            width: 100%;
            margin-bottom: 10px;
            font-size: 1rem;
        }

        /* Reviews Section */
        .reviews-section {
            margin-top: 40px;
        }

        .review-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: white;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .review-box textarea {
            resize: none;
            border-radius: 10px;
        }

        .like-button {
            cursor: pointer;
            color: gray;
        }

        .like-button.liked {
            color: red;
        }
        @media (max-width: 768px) {
            .main-image-container {
                height: 300px;
            }
            .product-details {
                padding: 20px;
            }
            .review-container {
                flex-direction: column;
                align-items: flex-start;
            }
            .review-box {
                width: 100%;
            }
        }
    </style>
</head>
<body>


<div class="container mt-5">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
            <li class="breadcrumb-item " aria-current="page"><%= product.productName %></li>
        </ol>
    </nav>
    <div class="row g-4">
        <!-- Main Image Section -->
        <div class="col-md-6 d-flex gap-4">
            
            <div class="thumbnails-container mt-3" style="flex-direction: column;">
                <% product.productImage.forEach((image, index) => { %>
                    <div class="thumbnail">
                        <img src="/uploads/product-images/<%=image%>" 
                             alt="Thumbnail <%= index + 1 %>" 
                             class="img-thumbnail" 
                             onclick="changeMainImage(this)">
                    </div>
                <% }) %>
            </div>
            <div class="main-image-container " id="mainImageContainer">
                <img src="/uploads/product-images/<%=product.productImage[0]%>" id="mainProductImage" alt="Product">
            </div>
        </div>

        <!-- Product Details -->
        <div class="col-md-6">
            <div class="product-details">
                <h1 class="product-title"><%= product.productName %></h1>
                <p class="product-category">Category: <%= category.name %></p>
                <div class="d-flex gap-3 align-items-center">
                    <h3 class="product-price" style="font-size: xx-large;">₹<%= product.salePrice %></h3><span class="product-price text-muted" style="font-size: medium;" ><strike>₹ <%= product.regularPrice %></strike></span>
                </div>
                <p class="product-quantity text-muted" style="font-size: smaller;">Stock: <%= product.quantity %></p>
                <div class="mb-2">
                    <span class="rating">
                        <i class="fas fa-star"></i>
                        <i class="fas fa-star"></i>
                        <i class="fas fa-star"></i>
                        <i class="fas fa-star-half-alt"></i>
                        <i class="far fa-star"></i>
                    </span>
                    <span class="text-muted ms-2">(45 reviews)</span>
                </div>
                <p class="description"><%= product.description %></p>
                <div class="action-buttons">
                    <button class="btn btn-primary" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
                    <button class="btn btn-outline-danger">Add to Wishlist</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="reviews-section">
        <h3 class="mt-5">Customer Reviews</h3>
        <div id="reviews">
            <div class="review-container">
                <p><strong>John Doe</strong>: Great product! Highly recommend it.</p>
                <span class="like-button" onclick="toggleLike(this)"><i class="fas fa-heart"></i></span>
            </div>
            <div class="review-container">
                <p><strong>Jane Smith</strong>: Good value for money.</p>
                <span class="like-button" onclick="toggleLike(this)"><i class="fas fa-heart"></i></span>
            </div>
        </div>
        <div class="review-box mt-4">
            <h5>Write a Review</h5>
            <textarea class="form-control" rows="3" id="reviewInput" placeholder="Share your thoughts..."></textarea>
            <button class="btn btn-success mt-2" onclick="submitReview()">Submit</button>
        </div>
    </div>
</div>

<script>
    // Change Main Image
    function changeMainImage(img) {
        const mainImage = document.getElementById('mainProductImage');
        mainImage.src = img.src;

        // Highlight active thumbnail
        document.querySelectorAll('.thumbnail img').forEach(thumbnail => {
            thumbnail.classList.remove('active');
        });
        img.classList.add('active');
    }

    // Add Review
    function submitReview() {
        const reviewInput = document.getElementById('reviewInput');
        const reviews = document.getElementById('reviews');
        if (reviewInput.value.trim()) {
            const newReview = `
                <div class="review-container">
                    <p><strong>You</strong>: ${reviewInput.value.trim()}</p>
                    <span class="like-button" onclick="toggleLike(this)"><i class="fas fa-heart"></i></span>
                </div>`;
            reviews.innerHTML += newReview;
            reviewInput.value = '';
        }
    }

    // Toggle Like
    function toggleLike(button) {
        button.classList.toggle('liked');
    }

    const imageZoom = document.getElementById('imageZoom');
        imageZoom.addEventListener('mousemove', (event) => {
            imageZoom.style.setProperty('--display', 'block');

            // Calculate pointer position as a percentage of the image dimensions
            const rect = imageZoom.getBoundingClientRect();
            const pointer = {
                x: ((event.clientX - rect.left) / rect.width) * 100,
                y: ((event.clientY - rect.top) / rect.height) * 100,
            };

            // Update the zoom position
            imageZoom.style.setProperty('--zoom-x', `${pointer.x}%`);
            imageZoom.style.setProperty('--zoom-y', `${pointer.y}%`);
        });

        imageZoom.addEventListener('mouseout', () => {
            imageZoom.style.setProperty('--display', 'none');
        });

        async function addToCart(productId) {
            console.log(productId,'productID');
            
            const quantity = 1; // You can replace this with a dynamic quantity if needed

            try {
                await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId: productId,
                        quantity: quantity,
                    }),
                }).then(response => response.json())
                .then(data => {
                    console.log(data);
                    if(data.success){
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: data.message,
                            showConfirmButton: false,
                            timer: 2000
                        })
                     
                    }else{
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: data.message,
                            showConfirmButton: false,
                            timer: 2000
                        })
                    }
                })
                .catch(error => {
                    console.log(error.message, 'cart adding problem');
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: 'An error occurred',
                        text: error.message,
                        showConfirmButton: false,
                        timer: 2000
                    });
                });
            }catch(error){
                console.log(error.message,'client err');
                
            }
        }


</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

