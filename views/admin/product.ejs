<%- include("../../views/partials/admin/header")%>
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Products</h2>
            <p>Lorem ipsum dolor sit amet.</p>
        </div>
        <div>
            <a href="#" class="btn btn-light rounded font-md">Export</a>
            <a href="#" class="btn btn-light rounded font-md">Import</a>
            <a href="/admin/addProducts" class="btn btn-primary btn-sm rounded">Create new</a>
        </div>
    </div>
    <div class="card mb-4">
        <header class="card-header">
            <div class="row gx-3">
                <div class="col-lg-4 col-md-6 me-auto">
                    <input type="text" placeholder="Search..." class="form-control" />
                </div>
                <div class="col-lg-2 col-6 col-md-3">
                    <select class="form-select">
                        <option value="">All categories</option>
                        <% cat.forEach(category => { %>
                            <option value="<%= category._id %>"><%= category.name %></option>
                        <% }) %>
                    </select>
                </div>
                <div class="col-lg-2 col-6 col-md-3">
                    <select class="form-select">
                      <option>Latest added</option>
                      <option>Cheap first</option>
                        <option>Most viewed</option>
                    </select>
                </div>
                <div class="col-lg-2 col-6 col-md-3">
                  <select class="form-select" onchange="this.value === 'grid' ? (window.location.href = '/admin/listProducts') : (window.location.href = '/admin/listProductsStyle2')">
                    <option value="grid">Grid</option>
                    <option value="list">List</option>
                  </select>
              </div>
            </div>
        </header>
        <!-- card-header end// -->
        <div class="card-body">
            <div class="row gx-3 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4 row-cols-xxl-5">
                <!-- col.// -->
                <% data.forEach(product => { %>
                    <div class="col">
                        <div class="card card-product-grid">
                            <a href="#" class="img-wrap">
                                <img src="/uploads/re-image/<%= product.productImage[0]%>" alt="Product" />
                            </a>
                            <% if(product.productOffer > 0) { %>
                            <div class="badge rounded-pill text-white d-flex gap-1" style="position: absolute; top: 10px; right: 10px; font-size: 12px; background-color: #f1b44c; color: #fff; padding: 2px 5px; border-radius: 5px;">
                                <span class="mt-1"><%= product.productOffer %>%</span><i class="material-icons md-local_offer"></i>
                            </div>
                            <% } %>
                            <div class="info-wrap">
                                <a href="#" class="title text-truncate"><%= product.productName %></a>
                                <div class="d-flex justify-content-between mt-1">
                                    <span style="color: chocolate; font-size: x-small;">
                                        Category: <%= product.category?.name || 'Uncategorized' %>
                                    </span>
                                    <span class="mb-2 text-muted" style="font-size: x-small;">
                                        Quantity: <%= product.quantity || 0 %>
                                    </span>
                                </div>
                                <div class="price mb-2">Sale price: ₹<%= product.salePrice || 'N/A' %></div>
                                <!-- <div class="price mb-2">Offer price: ₹<%= product.regularPrice || 'N/A' %></div> -->
                                <!-- price.// -->
                                <div class="d-flex justify-content-between">
                                    <div class="left d-flex">
                                      <% if(product.productOffer === 0) { %>
                                        <a href="#" class="btn btn-outline-info btn-sm font-sm rounded " onclick="addOffer('<%=product._id%>')"> Add offer </a>
                                      <% } else { %>
                                          <a href="#" class="btn btn-sm font-sm rounded" onclick="removeOffer('<%=product._id%>')">
                                              <i class="material-icons md-delete_forever" style="font-size: 1.2rem"></i> offer
                                          </a>
                                      <% } %>
                                    </div>
                                    <div class="right d-flex gap-1">
                                      <% if(product.isBlocked === false) { %>
                                        <a href="#" class="btn btn-outline-danger rounded btn-sm font-sm" id="togglebtn" onclick="toggleButton('<%= product._id %>', true)">
                                          <i class="material-icons md-block"></i>
                                        </a>
                                      <% } else { %>
                                          <a href="#" class="btn btn-danger rounded btn-sm font-sm"id="togglebtn" onclick="toggleButton('<%= product._id %>', false)">
                                            <i class="material-icons text-white md-block"></i>
                                          </a>
                                      <% } %>
                                      <td class="text-end">
                                          <div class="dropdown">
                                              <a href="#" data-bs-toggle="dropdown" class="btn btn-light rounded btn-sm font-sm">
                                                  <i class="material-icons md-more_horiz"></i>
                                              </a>
                                              <div class="dropdown-menu">
                                                  <a class="dropdown-item" href="#">View detail</a>
                                                  <a class="dropdown-item text-success" href="/admin/editProduct?id=<%=product._id%>">Edit</a>
                                                  <a class="dropdown-item btn-danger text-danger">Delete</a>
                                              </div>
                                          </div>
                                          <!-- dropdown //end -->
                                      </td>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
            <!-- row.// -->
        </div>
        <!-- card-body end// -->
    </div>
    <!-- card end// -->
    <div class="pagination-area mt-30 mb-50">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-start">
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>&search=<%= searchQuery %>"><%= i %></a>
                    </li>
                <% } %>
            </ul>
        </nav>
    </div>
</section>

<script>
    
    async function addOffer(productId) {
      try {
        const { value: amount } = await Swal.fire({
          title: 'Enter amount',
          input: 'number',
          inputLabel: 'Amount',
          showCancelButton: true,
        });

        if (amount) {
          console.log('add-fetch 1');

          const response = await fetch('/admin/addProductOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productId,
              percentage: amount,
            })
          });

          if (!response.ok) {
            throw new Error('Network response was not ok');
          }

          const data = await response.json();

          if (data.success) {
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: data.message,
              showConfirmButton: false,
              timer: 2000
            })
              .then(() => {
                window.location.href = '/admin/listProducts'
              })
          } else {
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: 'Creation failed !!',
              text: data.message,
              showConfirmButton: false,
              timer: 2000
            })
              .then(() => {
                window.location.href = '/admin/listProducts'
              })
          }
        }
      } catch (error) {
        // Handle error
        console.log('catch 1');

        Swal.fire({
          title: 'An error occurred',
          text: error.message,
          icon: 'error',
          confirmButtonText: 'OK'
        });

        console.log(error);
      }
    }

    async function removeOffer(productId) {
      const result = await Swal.fire({
        title: 'Are you sure?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
      })


      if (result) {
        try {
          const response = await fetch('/admin/removeProductOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productId: productId,
            })
          });

          const data = await response.json();

          console.log(data);

          if (data.success) {
            // Create success message with slide out effect
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: 'Offer Deleted!',
              showConfirmButton: false,
              timer: 2000,

            }).then(() => {
              window.location.href = '/admin/listProducts'; // Redirect after animation
            });
          } else {
            // Create error message with slide out effect
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: 'Creation Failed!',
              text: data.message,
              showConfirmButton: false,
              timer: 2000,
              
            }).then(() => {
              window.location.href = '/admin/listProducts'; // Redirect after animation
            });
          }
        } catch (error) {
          // Handle error
          Swal.fire({
            title: 'An error occurred',
            text: error.message,
            icon: 'error',
            confirmButtonText: 'OK'
          });
          console.log(error);
        }
      }

    }

    function toggleButton(id, condition) {
            console.log(id, condition);

            fetch('/admin/productToggleStatus', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: id,
                    condition: condition
                })
            })
            .then(response => {
                console.log(response);
                
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
                if (data.success) {
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    })
                    .then(() => {
                        window.location.reload();
                    })
                   
                } else { 
                   
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    })
                    .then(() => {
                        window.location.reload();
                    })
                }
            })

            .catch(error => {
                console.log(error.message, 'blocking problem');
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'An error occurred',
                    text: error.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            });
        }

</script>

<%- include("../../views/partials/admin/footer")%>

