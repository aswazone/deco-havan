<head>
    <style>
        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 16px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
    
        .card-title {
            font-size: 1.25rem;
            margin-bottom: 1rem;
        }
    
        .progress-item {
            margin-bottom: 1rem;
        }
    
        .progress {
            height: 20px;
            border-radius: 8px;
            background-color: #f1f1f1;
        }
    
        .progress-bar {
            font-size: 0.875rem;
            line-height: 20px;
            border-radius: 8px;
            text-align: center;
        }
    
        @media (max-width: 768px) {
            .progress-item {
                display: flex;
                flex-direction: column;
                align-items: flex-start;
            }
    
            .progress {
                width: 100%;
            }
        }
    </style>
</head>
<%- include("../../views/partials/admin/header") %>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Dashboard</h2>
                <p>Whole data about your business here</p>
            </div>
            <div>
                <a href="/admin/sales-report" class="btn btn-primary"><i class="text-muted material-icons md-post_add"></i>Create report</a>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-primary-light"><i class="text-primary material-icons md-monetization_on"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Revenue</h6>
                            <span>$13,456.5</span>
                            <span class="text-sm"> Shipping fees are not included </span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-success-light"><i class="text-success material-icons md-local_shipping"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Orders</h6>
                            <span>53.668</span>
                            <span class="text-sm"> Excluding orders in transit </span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Products</h6>
                            <span>9.856</span>
                            <span class="text-sm"> In 19 Categories </span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-info-light"><i class="text-info material-icons md-shopping_basket"></i></span>
                        <div class="text">
                            <h6 class="mb-1 card-title">Monthly Earning</h6>
                            <span>$6,982</span>
                            <span class="text-sm"> Based in your local time. </span>
                        </div>
                    </article>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-8 col-lg-12">
                 <div class="card mb-4">
                    <article class="card-body">
                        <h5 class="card-title">Sale statistics</h5>
                        <canvas id="myChart" height="120px"></canvas>
                    </article>
                </div>
            </div>
            <div class="col-xl-4 col-lg-12">
                <div class="card mb-4">
                    <article class="card-body">
                        <h5 class="card-title">Top Categories</h5>
                        <div id="progress-container"></div>
                    </article>
                </div>
                <!-- <div class="card mb-4">
                    <article class="card-body">
                        <h5 class="card-title">Revenue Base on Area</h5>
                        <canvas id="myChart2" height="217"></canvas>
                    </article>
                </div> -->
                
            </div>
        </div>
        <div class="card mb-4">
            <header class="card-header">
                <h4 class="card-title">Latest orders</h4>
                <div class="row align-items-center gap-2">
                    <div class="row g-3">
                        <div class="col-lg-3 col-md-6">
                            <select id="periodfilter" class="form-select">
                                <option value="" selected>All Periods</option>
                                <option value="daily">Daily</option>
                                <option value="weekly">Weekly</option>
                                <option value="monthly">Monthly</option>
                                <option value="yearly">Yearly</option>
                            </select>
                        </div>
                        
                        <div class="col-lg-3 col-md-6 me-auto">
                            <select id="statusfilter" class="form-select">
                                <option value="" selected>All Status</option>
                                <option value="Pending">Pending</option>
                                <option value="Processing">Processing</option>
                                <option value="Shipped">Shipped</option>
                                <option value="Delivered">Delivered</option>
                                <option value="Cancelled">Cancelled</option>
                                <option value="Return Request">Return Request</option>
                                <option value="Returned">Returned</option>
                            </select>
                        </div>

                        <div class="col-lg-2 col-md-6 d-flex align-items-center">
                            <label for="startDate" class="me-2">From:</label>
                            <input id="startDate" type="date" class="form-control">
                        </div>

                        <div class="col-lg-2 col-md-6 d-flex align-items-center ms-2">
                            <label for="endDate" class="me-2">To:</label>
                            <input id="endDate" type="date" class="form-control">
                        </div>
                    </div>
                </div>
            </header>
            <div class="card-body">
                <div class="table-responsive">
                    <div class="table-responsive">
                        <table class="table align-middle table-nowrap mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col" class="text-center">
                                        <div class="form-check align-middle">
                                            <input class="form-check-input" type="checkbox" id="transactionCheck01" />
                                            <label class="form-check-label" for="transactionCheck01"></label>
                                        </div>
                                    </th>
                                    <th class="align-middle" scope="col">Order ID</th>
                                    <th class="align-middle" scope="col">Billing Name</th>
                                    <th class="align-middle" scope="col">Date</th>
                                    <th class="align-middle" scope="col">Total</th>
                                    <th class="align-middle" scope="col">Payment Status</th>
                                    <th class="align-middle" scope="col">Payment Method</th>
                                    <th class="align-middle" scope="col">Status</th>
                                    <th class="align-middle" scope="col">View Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- table-responsive end// -->
            </div>
        </div>
        
        <div id="pagination" class="pagination justify-content-center mt-4"></div>
        <div>
            <canvas id="top-selling-products-chart"></canvas>
        </div>
    </section>
<%- include("../../views/partials/admin/footer") %>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const startDate = document.getElementById('startDate');
        const endDate = document.getElementById('endDate');
        const periodFilter = document.getElementById('periodfilter');
        const statusfilter = document.getElementById('statusfilter');
        const pagination = document.getElementById('pagination');
    
        async function fetchFilteredData(startDate = '', endDate = '', status = '', page = 1) {
            try {
                const response = await fetch(`/admin/fetchOrderList?startDate=${startDate}&endDate=${endDate}&status=${status}&page=${page}&limit=5`);
                const data = await response.json();
                console.log(data);
                renderOrdersList(data.orders);
                renderPagination(data.totalItems, page);
                renderTopSellingProducts(data.topProducts);
                console.log((data.topProducts).map(product => product.name));
                
            } catch (error) {
                console.error('Error fetching data:', error.message);
            }
        }
    
        function renderOrdersList(orders) {
            const ordersTableBody = document.querySelector('tbody');
            ordersTableBody.innerHTML = '';
    
            orders.forEach((order) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="text-center">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" />
                        </div>
                    </td>
                    <td><a href="#" class="fw-bold">#${order.orderId}</a></td>
                    <td><a href="/admin/${order.id}">${order.user.name}</a></td>
                    <td>${new Date(order.createdAt).toLocaleString('default', { day: 'numeric', month: 'long', year: 'numeric' })}</td>
                    <td>₹ ${order.finalAmount}</td>
                    <td><span class="badge badge-pill badge-soft-success">${order.paymentStatus}</span></td>
                    <td>${order.paymentMethod}</td>
                    <td><span class="badge badge-pill badge-soft-success">${order.status}</span></td>
                    <td><a href="/admin/${order._id}" class="btn btn-xs">View details</a></td>
                `;
                ordersTableBody.appendChild(row);
            });
        }
    
        function renderPagination(totalItems, currentPage) {
            pagination.innerHTML = '';
            const totalPages = Math.ceil(totalItems / 5);
    
            for (let i = 1; i <= totalPages; i++) {
                const pageItem = document.createElement('li');
                pageItem.className = `page-item ${i === currentPage ? 'active' : ''}`;
                pageItem.innerHTML = `
                    <a class="page-link" href="#">${i}</a>
                `;
                pageItem.addEventListener('click', (e) => {
                    e.preventDefault();
                    fetchFilteredData(
                        startDate.value || '',
                        endDate.value || '',
                        statusfilter.value || '',
                        i
                    );
                });
                pagination.appendChild(pageItem);
            }
        }

        function renderTopSellingProducts(products) {

            if (!products || products.length === 0) {
                const ctx = document.getElementById('top-selling-products-chart').getContext('2d');
                const chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [],
                        datasets: []
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
                return;
            }

            const ctx = document.getElementById('top-selling-products-chart').getContext('2d');

            // Clear the existing chart
            if (Chart.getChart('top-selling-products-chart')) {
                Chart.getChart('top-selling-products-chart').destroy();
            }

            const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: products.map(product => product.productName),
                    datasets: [{
                        label: 'Top Selling Products',
                        data: products.map(product => product.totalSales),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }

                }
            });
        }
    
        function handlePeriodFilterChange() {
            const period = periodFilter.value;
            let startDateValue, endDateValue;
    
            const today = new Date();
            switch (period) {
                case 'daily':
                    startDateValue = new Date().toISOString().split('T')[0];
                    endDateValue = new Date(today.setDate(today.getDate() + 1)).toISOString().split('T')[0];
                    break;
                case 'weekly':
                    startDateValue = new Date(today.setDate(today.getDate() - today.getDay())).toISOString().split('T')[0];
                    endDateValue = new Date(today.setDate(today.getDate() + 6)).toISOString().split('T')[0];
                    break;
                case 'monthly':
                    startDateValue = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];
                    endDateValue = new Date(today.getFullYear(), today.getMonth() + 1, 0).toISOString().split('T')[0];
                    break;
                case 'yearly':
                    startDateValue = new Date(today.getFullYear(), 0, 1).toISOString().split('T')[0];
                    endDateValue = new Date(today.getFullYear(), 11, 31).toISOString().split('T')[0];
                    break;
                default:
                    startDateValue = '';
                    endDateValue = '';
            }
    
            // Disable date inputs and fetch data
            startDate.value = startDateValue;
            endDate.value = endDateValue;
            startDate.disabled = !!startDateValue;
            endDate.disabled = !!endDateValue;
    
            fetchFilteredData(startDateValue, endDateValue, statusfilter.value, 1);
        }
    
        function handleCustomDateChange() {
            // Reset the period filter to "Custom"
            if (periodFilter.value !== '') {
                periodFilter.value = '';
                startDate.disabled = false;
                endDate.disabled = false;
            }
    
            // Fetch data with the selected dates
            fetchFilteredData(startDate.value, endDate.value, statusfilter.value, 1);
        }
    
        periodFilter.addEventListener('change', handlePeriodFilterChange);
        startDate.addEventListener('change', handleCustomDateChange);
        endDate.addEventListener('change', handleCustomDateChange);
        statusfilter.addEventListener('change', () => {
            fetchFilteredData(startDate.value, endDate.value, statusfilter.value, 1);
        });
    
        fetchFilteredData(); // Initial load
        
        // Sample data for the progress bars

        // Function to fetch data from the backend
        async function fetchData() {
            try {
                const response = await fetch('/admin/dash-data');
                const data = await response.json();
                if(data.success){

                    const getColor = (percentage) => {
                            if (percentage >= 80) return '#28a745'; // Green
                            if (percentage >= 50) return '#ffc107'; // Yellow
                            return '#dc3545'; // Red
                    };
                    
                    const progressItems = (data.data).map(
                            (item) => `
                            <div class="progress-item">
                                <span class="text-muted font-xs">${item.name}</span>
                                <div class="progress mb-3">
                                    <div class="progress-bar" role="progressbar" 
                                        style="width: ${item.progress}%; background-color: ${getColor(item.progress)};" 
                                        aria-valuenow="${item.progress}" aria-valuemin="0" aria-valuemax="100">
                                        ${item.progress}%
                                    </div>
                                </div>
                            </div>
                        `
                        )
                        .join('');

                        document.getElementById('progress-container').innerHTML = progressItems;
                        
                    }
            } catch (error) {
                console.error('Error fetching data:', error.message);
                return [];
            }
        }

        fetchData();
        

        // const ctx = document.getElementById('top-selling-products-chart').getContext('2d');
        // const chart = new Chart(ctx, {
        //   type: 'bar',
        //   data: {
        //     labels: ['Classic Wooden Sofa', 'Book Pattern Center Table', 'Vesta Center Table', 'Clark Dining Table', 'Kelvin Arm Chair'],
        //     datasets: [{
        //       label: 'Top Selling Products',
        //       data: [6, 3, 2, 1, 1],
        //       backgroundColor: [
        //         'rgba(255, 99, 132, 0.2)',
        //         'rgba(54, 162, 235, 0.2)',
        //         'rgba(255, 206, 86, 0.2)',
        //         'rgba(75, 192, 192, 0.2)',
        //         'rgba(153, 102, 255, 0.2)'
        //       ],
        //       borderColor: [
        //         'rgba(255, 99, 132, 1)',
        //         'rgba(54, 162, 235, 1)',
        //         'rgba(255, 206, 86, 1)',
        //         'rgba(75, 192, 192, 1)',
        //         'rgba(153, 102, 255, 1)'
        //       ],
        //       borderWidth: 1
        //     }]
        //   },
        //   options: {
        //     scales: {
        //       y: {
        //         beginAtZero: true
        //       }
        //     }
        //   }
        // });
        
        // Update chart data based on selected period filter
        function updateChartData(periodFilter) {
          const periodFilters = {
            daily: 'day',
            weekly: 'week',
            monthly: 'month',
            yearly: 'year'
          };
        
          const period = periodFilters[periodFilter];
          const data = []; // will be populated with sales data
        
          // Assuming you have a function to get the top-selling products for a given period
          const topSellingProducts = getTopSellingProducts(period);
        
          topSellingProducts.forEach(product => {
            data.push({
              label: product.name,
              data: product.sales
            });
          });
        
          chart.data.labels = data.map(product => product.label);
          chart.data.datasets[0].data = data.map(product => product.data);
          chart.update();
        }
        
        // Call updateChartData function when period filter changes
        document.getElementById('period-filter').addEventListener('change', event => {
          const periodFilter = event.target.value;
          updateChartData(periodFilter);
        });
        
           
    
    });
    </script>